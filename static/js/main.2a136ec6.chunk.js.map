{"version":3,"sources":["components/Header/index.js","constants/index.js","components/CodeInput/index.js","components/Result/index.js","components/Title/index.js","components/Results/index.js","components/SubmitButton/index.js","components/TestingForm/index.js","util/index.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","src","alt","OPERADORES_JAVA","CONDICIONALES_JAVA","try","CodeInput","code","onCodeChange","id","placeholder","value","onChange","Result","name","Title","children","Results","SubmitButton","onClick","style","display","justifyContent","FORM_STATES","TestingForm","useState","cantLineasTotales","setcantLineasTotales","complejidadCiclomatica","setcomplejidadCiclomatica","longitudHalstead","setlongitudHalstead","volumenHalstead","setvolumenHalstead","comentariosSimples","setcomentariosSimples","currentState","setCurrentState","outputs","parseFloat","toFixed","setCode","handleHalsteadResult","cantidadOperadoresUnicos","cantidadOperandosUnicos","cantidadOperadoresTotales","cantidadOperandosTotales","parseInt","Math","log2","handleComplejidadCiclomaticaResult","result","e","target","length","map","output","marginTop","preventDefault","split","callback","forEach","c","Object","values","calcularComplejidadCiclomatica","texto","textosSinComentarios","replace","operandosUnicos","i","indexOf","aAnalizar","hasta","j","push","console","log","halstead","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2a136ec6.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport \"./index.scss\";\r\n\r\nexport default function Header() {\r\n  return (\r\n    <header className=\"App-header\">\r\n      <div className=\"container\">\r\n        <div>\r\n          <img\r\n            src=\"https://miel.unlam.edu.ar/vista/imagenes/logo_unlam_34.png\"\r\n            className=\"unlam-logo\"\r\n            alt=\"logo unlam\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <p>Grupo 3</p>\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n","export const OPERADORES_JAVA = [\r\n  \"+\",\r\n  \"-\",\r\n  \"/\",\r\n  \"*\",\r\n  \"int\",\r\n  \"double\",\r\n  \"float\",\r\n  \";\",\r\n  \":\",\r\n  \"public\",\r\n  \"static\",\r\n  \"void\",\r\n  \"&&\",\r\n  \"||\",\r\n  \"<=\",\r\n  \">=\",\r\n  \"<\",\r\n  \">\",\r\n];\r\n\r\nexport const CONDICIONALES_JAVA = {\r\n  \">\": 0,\r\n  \"<\": 0,\r\n  \">=\": 0,\r\n  \"<=\": 0,\r\n  \"==\": 0,\r\n  try: 0,\r\n};\r\n\r\nexport const CODE_EXAMPLE = `public static void main(String[] args) {\r\n\r\n  Java8Function3 obj = new Java8Function3();\r\n\r\n  List<String> list = Arrays.asList(\"node\", \"c++\", \"java\", \"javascript\");\r\n\r\n  // lambda\r\n  Map<String, Integer> map = obj.convertListToMap(list, x -> x.length());\r\n\r\n  System.out.println(map);    // {node=4, c++=3, java=4, javascript=10}\r\n\r\n  // method reference\r\n  Map<String, Integer> map2 = obj.convertListToMap(list, obj::getLength);\r\n\r\n  System.out.println(map2);\r\n}`;\r\n","import React from \"react\";\r\n\r\nimport \"./index.scss\";\r\n\r\nexport default function CodeInput({ code, onCodeChange }) {\r\n  return (\r\n    <div className=\"codigo-container\">\r\n      <textarea\r\n        id=\"code\"\r\n        placeholder=\"codigo a evaluar\"\r\n        className=\"codigo\"\r\n        value={code}\r\n        onChange={onCodeChange}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport \"./index.scss\";\r\n\r\nexport default function Result({ value, name }) {\r\n  return (\r\n    <div className=\"result\">\r\n      <div className=\"result-value-container\">{value}</div>\r\n      <div className=\"result-description-container\">{name}</div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport \"./index.scss\";\r\n\r\nexport default function Title({ children }) {\r\n  return (\r\n    <div className=\"result-title-container\">\r\n      <p>{children}</p>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Title from \"../Title\";\r\n\r\nimport \"./index.scss\";\r\n\r\nexport default function Results({ children, className }) {\r\n  return (\r\n    <div className={`results-container ${className}`}>\r\n      <Title>Resultados</Title>\r\n      <div className=\"cards-container\">{children}</div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport \"./index.scss\";\r\n\r\nexport default function SubmitButton({ onClick, style, children }) {\r\n  return (\r\n    <div style={{ display: \"flex\", justifyContent: \"center\", ...style }}>\r\n      <button onClick={onClick} className=\"submit-button\">\r\n        {children}\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { CODE_EXAMPLE } from \"../../constants\";\r\nimport { halstead, calcularComplejidadCiclomatica } from \"../../util\";\r\nimport CodeInput from \"../CodeInput\";\r\nimport Result from \"../Result\";\r\nimport Results from \"../Results\";\r\nimport SubmitButton from \"../SubmitButton\";\r\nimport Title from \"../Title\";\r\n\r\nimport \"./index.scss\";\r\n\r\nconst FORM_STATES = {\r\n  WAITING_INPUT: 1,\r\n  INPUT_LOADED: 2,\r\n  SHOW_RESULTS: 3,\r\n};\r\n\r\nexport default function TestingForm() {\r\n  const [cantLineasTotales, setcantLineasTotales] = useState(0);\r\n  const [complejidadCiclomatica, setcomplejidadCiclomatica] = useState(0);\r\n  const [longitudHalstead, setlongitudHalstead] = useState(0);\r\n  const [volumenHalstead, setvolumenHalstead] = useState(0);\r\n  const [comentariosSimples, setcomentariosSimples] = useState(0);\r\n\r\n  const [currentState, setCurrentState] = useState(FORM_STATES.INPUT_LOADED);\r\n\r\n  const outputs = [\r\n    {\r\n      name: \"cantidad de líneas\",\r\n      value: cantLineasTotales,\r\n    },\r\n    {\r\n      name: \"cantidad de líneas de código\",\r\n      value: cantLineasTotales - comentariosSimples,\r\n    },\r\n    {\r\n      name: \"cantidad de líneas comentadas\",\r\n      value: comentariosSimples,\r\n    },\r\n    {\r\n      name: \"porcentaje de líneas comentadas\",\r\n      value:\r\n        comentariosSimples > 0 && cantLineasTotales > 0\r\n          ? parseFloat(comentariosSimples / cantLineasTotales).toFixed(3) * 100\r\n          : 0,\r\n    },\r\n    {\r\n      name: \"complejidad ciclomática\",\r\n      value: complejidadCiclomatica,\r\n    },\r\n    {\r\n      name: \"longitud de Halstead\",\r\n      value: longitudHalstead,\r\n    },\r\n    {\r\n      name: \"volumen de Halstead\",\r\n      value: volumenHalstead,\r\n    },\r\n  ];\r\n\r\n  const [code, setCode] = useState(CODE_EXAMPLE);\r\n  const handleCodeChange = (e) => {\r\n    setCode(e.target.value);\r\n\r\n    if (e.target.value.length) setCurrentState(FORM_STATES.INPUT_LOADED);\r\n    else setCurrentState(FORM_STATES.WAITING_INPUT);\r\n  };\r\n\r\n  const handleHalsteadResult = (\r\n    cantidadOperadoresUnicos,\r\n    cantidadOperandosUnicos,\r\n    cantidadOperadoresTotales,\r\n    cantidadOperandosTotales\r\n  ) => {\r\n    setlongitudHalstead(\r\n      cantidadOperadoresUnicos <= 0 || cantidadOperandosUnicos <= 0\r\n        ? \"-\"\r\n        : parseInt(\r\n            cantidadOperadoresUnicos * Math.log2(cantidadOperadoresUnicos) +\r\n              cantidadOperandosUnicos * Math.log2(cantidadOperandosUnicos)\r\n          )\r\n    );\r\n    setvolumenHalstead(\r\n      cantidadOperadoresUnicos + cantidadOperandosUnicos <= 0\r\n        ? \"-\"\r\n        : parseFloat(\r\n            (cantidadOperadoresTotales + cantidadOperandosTotales) *\r\n              Math.log2(cantidadOperadoresUnicos + cantidadOperandosUnicos)\r\n          ).toFixed(1)\r\n    );\r\n  };\r\n\r\n  const handleComplejidadCiclomaticaResult = (result) => {\r\n    setcomplejidadCiclomatica(result + 1);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    setcantLineasTotales(code.split(\"\\n\").length);\r\n    setcomentariosSimples(code.split(\"//\").length - 1);\r\n\r\n    calcularComplejidadCiclomatica(code, handleComplejidadCiclomaticaResult);\r\n    halstead(code, handleHalsteadResult);\r\n\r\n    setCurrentState(FORM_STATES.SHOW_RESULTS);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Title>Herramienta de testing</Title>\r\n\r\n      <CodeInput code={code} onCodeChange={handleCodeChange} />\r\n      <Results\r\n        className={\r\n          currentState === FORM_STATES.SHOW_RESULTS ? \"div-show\" : \"div-hide\"\r\n        }\r\n      >\r\n        {outputs.map((output) => (\r\n          <Result key={output.name} {...output} />\r\n        ))}\r\n      </Results>\r\n      {currentState === FORM_STATES.INPUT_LOADED && (\r\n        <SubmitButton style={{ marginTop: \"20px\" }} onClick={handleSubmit}>\r\n          Calcular\r\n        </SubmitButton>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import { CONDICIONALES_JAVA, OPERADORES_JAVA } from \"../constants\";\r\n\r\nexport const halstead = (texto, callback) => {\r\n  //Operadores + - = * ; int double float return\r\n  let textosSinComentarios = texto.replace(\r\n    /(\\/\\*([\\s\\S]*?)\\*\\/)|(\\/\\/(.*)$)/gm,\r\n    \"\"\r\n  );\r\n  let cantidadOperadoresTotales = 0;\r\n  let cantidadOperandosTotales = 0;\r\n  let cantidadOperadoresUnicos = 0;\r\n  let cantidadOperandosUnicos = 0;\r\n\r\n  //var operadores = document.getElementById(\"operadores\").value.split(',');\r\n  let operandosUnicos = [];\r\n\r\n  //OPERADORES UNICOS Y TOTALES.\r\n  for (let i = 0; i < OPERADORES_JAVA.length; i++) {\r\n    if (textosSinComentarios.indexOf(OPERADORES_JAVA[i]) !== -1)\r\n      cantidadOperadoresUnicos++;\r\n    cantidadOperadoresTotales += texto.split(OPERADORES_JAVA[i]).length - 1;\r\n  }\r\n\r\n  //OPERADORES TOTALES\r\n\r\n  //OPERANDOS UNICOS Y TOTALES.\r\n  let aAnalizar = textosSinComentarios.split(\" \");\r\n  let hasta = textosSinComentarios.split(\" \").length;\r\n  for (let j = 0; j < hasta; j++) {\r\n    //Si no es un operador y todavia no esta en el array de operandos unicos.\r\n    if (\r\n      OPERADORES_JAVA.indexOf(aAnalizar[j]) === -1 &&\r\n      operandosUnicos.indexOf(aAnalizar[j]) === -1\r\n    ) {\r\n      operandosUnicos.push(aAnalizar[j]);\r\n      cantidadOperandosUnicos++;\r\n    }\r\n    //Si no es un operador.\r\n    if (OPERADORES_JAVA.indexOf(aAnalizar[j]) === -1)\r\n      cantidadOperandosTotales++;\r\n  }\r\n\r\n  console.log({\r\n    cantidadOperadoresUnicos,\r\n    cantidadOperandosUnicos,\r\n    cantidadOperadoresTotales,\r\n    cantidadOperandosTotales,\r\n  });\r\n\r\n  callback(\r\n    cantidadOperadoresUnicos,\r\n    cantidadOperandosUnicos,\r\n    cantidadOperadoresTotales,\r\n    cantidadOperandosTotales\r\n  );\r\n};\r\n\r\nexport const calcularComplejidadCiclomatica = (code, callback) => {\r\n  let result = 0;\r\n  const codeSplited = code.split(\" \");\r\n\r\n  codeSplited.forEach((c) => {\r\n    if (c in CONDICIONALES_JAVA) {\r\n      ++CONDICIONALES_JAVA[c];\r\n    }\r\n  });\r\n\r\n  Object.values(CONDICIONALES_JAVA).forEach((e) => {\r\n    result = result + e;\r\n  });\r\n\r\n  callback(result);\r\n};\r\n","import \"./App.scss\";\r\nimport Header from \"./components/Header\";\r\nimport TestingForm from \"./components/TestingForm\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Header />\r\n      <div className=\"contenedor\">\r\n        <TestingForm />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}